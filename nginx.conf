user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


#http {
#    include       /etc/nginx/mime.types;
#    default_type  application/octet-stream;
#
#    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                      '$status $body_bytes_sent "$http_referer" '
#                      '"$http_user_agent" "$http_x_forwarded_for"';
#
#    access_log  /var/log/nginx/access.log  main;
#
#    sendfile        on;
#    #tcp_nopush     on;
#
#    keepalive_timeout  65;
#
#    #gzip  on;
#
#    root /opt/site;
#
#    #include /etc/nginx/conf.d/*.conf;
#
#
#  server {
#      listen       80;
#      listen  [::]:80;
#      server_name  localhost;
#  
#      #charset koi8-r;
#      #access_log  /var/log/nginx/host.access.log  main;
#
#      location / {
#          #root   /usr/share/nginx/html;
#          root   /opt/site;
#          index  index.html index.htm;
#      }
#
#      #error_page  404              /404.html;
#
#      # redirect server error pages to the static page /50x.html
#      #
#      error_page   500 502 503 504  /50x.html;
#      location = /50x.html {
#          root   /usr/share/nginx/html;
#      }
#
#      # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#      #
#      #location ~ \.php$ {
#      #    proxy_pass   http://127.0.0.1;
#      #}
#
#      # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#      #
#      #location ~ \.php$ {
#      #    root           html;
#      #    fastcgi_pass   127.0.0.1:9000;
#      #    fastcgi_index  index.php;
#      #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#      #    include        fastcgi_params;
#      #}
#
#      # deny access to .htaccess files, if Apache's document root
#      # concurs with nginx's one
#      #
#      #location ~ /\.ht {
#      #    deny  all;
#      #}
#   }
#
#}

# Multiplexing ssh + https
stream {
    ssl_protocols TLSv1.2 TLSv1.3;
    upstream ssh {
        # SSH Host
        server 192.168.1.201:22;
    }
    upstream webssl {
        # HTTPS Host
        server 192.168.1.201:4431;
    }
    upstream web {
        # HTTP Host
        server 192.168.1.201:801;
    }

    map $ssl_preread_protocol $upstream {
        default ssh;
        "TLSv1.1" webssl;
        "TLSv1.2" webssl;
        "TLSv1.3" webssl;
    }

    server {
        listen 80;
        proxy_pass web;
    }
    server {
        listen 443;
        proxy_pass $upstream;
        ssl_preread on;
    }
}

# Reading SSH Connections
#stream {
#    upstream ssh {
#        server localhost:22;
#    }
#    server {
#        listen 80;
#        proxy_pass ssh;
#    }
#}

